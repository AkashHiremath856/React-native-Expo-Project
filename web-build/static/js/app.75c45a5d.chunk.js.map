{"version":3,"sources":["firebase.js","screens/loginscreen.js","screens/registerscreen.js","components/CustomListItem.js","screens/HomeScreen.js","screens/AddChat.js","screens/chatScreen.js","screens/profileScreen.js","screens/About.js","App.js","screens/fixtimerbug.js"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","loginscreen","navigation","useState","email","setEmail","password","setPassword","useEffect","setOptions","headerTitleStyle","alignSelf","onAuthStateChanged","authUser","replace","signin","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","style","styles","container","source","uri","width","height","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","onPress","title","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop","registerscreen","name","setName","React","selectedImage","setSelectedImage","useLayoutEffect","headerBackTitle","behavior","StatusBar","h3","marginBottom","inputcontainer","autofocus","flexDirection","TouchableOpacity","a","async","ImagePicker","granted","pickerResult","cancelled","localUri","activeOpacity","Ionicons","cam","size","txt","raised","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","marginLeft","CustomListItem","id","chatName","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","bottomDivider","rounded","Content","Title","fontWeight","Subtitle","fontStyle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","currentUser","ToastAndroid","showWithGravity","SHORT","CENTER","profile","headerTitle","headerStyle","color","headerTintColor","headerLeft","headerRight","marginRight","AntDesign","SimpleLineIcons","SafeAreaView","LinearGradient","colors","ScrollView","AddChat","input","setInput","createChat","add","goBack","leftIcon","chatScreen","route","messages","setMessages","params","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","call","Linking","openURL","headerBackTitleVisible","headerTitleAlign","Avatar","Text","ImageBackground","image","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","paddingTop","receiver","position","bottom","right","rigth","receiverText","sender","senderText","senderName","footer","TextInput","textInput","borderRadius","maxWidth","left","paddingRight","fontSize","resizeMode","profileScreen","Image","stretch","textAlign","signOut","showWithGravityAndOffset","LONG","BOTTOM","borderColor","About","Stack","createStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","screenOptions","Screen","component","_setTimeout","global","setTimeout","_clearTimeout","clearTimeout","timerFix","runTask","fn","ttl","args","waitingTime","Date","now","InteractionManager","runAfterInteractions","afterTime","Math","min","time","Object","keys","startsWith"],"mappings":"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","file":"static/js/app.75c45a5d.chunk.js","sourcesContent":["import  firebase from 'firebase/app';\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA1-dSGMDiD8KMPdYQ348APxsa99ncO5rw\",\n  authDomain: \"signal-clone-140cd.firebaseapp.com\",\n  projectId: \"signal-clone-140cd\",\n  storageBucket: \"signal-clone-140cd.appspot.com\",\n  messagingSenderId: \"999051839514\",\n  appId: \"1:999051839514:web:c800c2827e0f725386e9a3\"\n};\n\nlet app;\n\nif(firebase.apps.length===0){\n  app=firebase.initializeApp(firebaseConfig)\n}else{\n  app=firebase.app();\n}\n\nconst db=app.firestore();\nconst auth=firebase.auth();\n\nexport{db,auth};\n","import React, { useEffect } from 'react'\nimport { useState } from \"react\";\nimport { StyleSheet, Text, View, StatusBar, KeyboardAvoidingView } from 'react-native'\nimport { Button, Input, Image } from 'react-native-elements'\nimport { auth } from \"../firebase\"\n\nconst loginscreen = ({ navigation }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    useEffect(() => {\n        navigation.setOptions({\n            headerTitleStyle: { alignSelf: \"center\" },\n        })\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\n            if (authUser) {\n                navigation.replace(\"Home\")\n            }\n        })\n\n        return unsubscribe;\n\n    }, [])\n\n    const signin = () => {\n        auth\n            .signInWithEmailAndPassword(email, password)\n            .catch((error) => alert(error))\n    }\n\n    return (\n        <KeyboardAvoidingView style={styles.container}>\n            <StatusBar style=\"light\" />\n            <Image source={{\n                uri:\n                    \"https://img.icons8.com/color/720/000000/signal-app.png\",\n            }}\n                style={{ width: 200, height: 200 }}\n            />\n            <View style={styles.inputContainer}>\n                <Input placeholder=\"Email\" autoFocus type=\"email\" value={email}\n                    onChangeText={(text) => setEmail(text)} />\n                <Input placeholder=\"Password\" secureTextEntry type=\"password\" value={password}\n                    onChangeText={(text) => setPassword(text)}\n                    onSubmitEditing={signin}\n                />\n            </View>\n            <Button containerStyle={styles.button} onPress={signin} title=\"Login\" />\n            <Button containerStyle={styles.button} type=\"outline\" title=\"Sign up\"\n                onPress={() => navigation.navigate(\"Register\")} />\n            <View style={{ height: 100 }} />\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default loginscreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: 10,\n        backgroundColor: \"white\"\n    },\n    inputContainer: {\n        width: 300\n    },\n    button: {\n        width: 200,\n        marginTop: 10\n    },\n})\n","import React, { useLayoutEffect } from 'react'\nimport { useState } from \"react\";\nimport { KeyboardAvoidingView } from 'react-native'\nimport { StyleSheet, View, Image } from 'react-native'\nimport { StatusBar } from 'expo-status-bar'\nimport { Button, Input, Text } from 'react-native-elements'\nimport { auth } from '../firebase'\nimport '../screens/fixtimerbug'\nimport * as ImagePicker from 'expo-image-picker';\nimport { Ionicons } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native';\n\n\nconst registerscreen = ({ navigation }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [imageUrl, setimageUrl] = useState('');\n    const [selectedImage, setSelectedImage] = React.useState(null);\n\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerBackTitle: \"Back to Login\",\n        });\n    }, [navigation]);\n\n    const register = () => {\n        auth\n            .createUserWithEmailAndPassword(email, password)\n            .then((authUser) => {\n                authUser.user.updateProfile({\n                    displayName: name,\n                    photoURL: selectedImage.localUri ||\n                        \"https://img.icons8.com/material/96/000000/user-male-circle--v1.png\"\n                })\n            })\n            .catch((error) => alert(error.message))\n    }\n\n    let openImagePickerAsync = async () => {\n        let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert('Permission to access camera roll is required!');\n            return;\n        }\n\n        let pickerResult = await ImagePicker.launchImageLibraryAsync();\n\n        if (pickerResult.cancelled === true) {\n            return;\n        }\n\n        setSelectedImage({ localUri: pickerResult.uri });\n    };\n\n    return (\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n            <StatusBar style=\"light\" />\n\n            <Text h3 style={{ marginBottom: 50 }}>Create a Signal account</Text>\n\n            <View style={styles.inputcontainer}>\n                <Input placeholder=\"Full Name\" autofocus type=\"text\" value={name}\n                    onChangeText={(text) => setName(text)} />\n                <Input placeholder=\"Email\" type=\"email\" value={email}\n                    onChangeText={(text) => setEmail(text)} />\n                <Input placeholder=\"Password\" type=\"password\" secureTextEntry value={password}\n                    onChangeText={(text) => setPassword(text)} />\n\n            </View>\n            <View style={{ flexDirection: \"row\" }}>\n                <TouchableOpacity onPress={openImagePickerAsync} activeOpacity=\"0.5\">\n                    <Ionicons name=\"camera\" style={styles.cam}\n                        size={40} />\n                </TouchableOpacity>\n                <Text style={styles.txt}>Select Profile</Text>\n            </View>\n            <View style={{ marginTop: 10 }} />\n            <Button raised\n                onPress={register} title=\"Register\" style={styles.button}\n            />\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default registerscreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 10,\n        backgroundColor: \"white\"\n    },\n    button: {\n        width: 200,\n        marginTop: 40,\n    },\n    inputcontainer: {\n        width: 300\n    },\n    cam: {\n        alignItems: \"center\",\n    },\n    txt: {\n        alignItems: \"center\",\n        marginTop: 10,\n        marginLeft: 7,\n    }\n})\n","import React, { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { ListItem, Avatar } from 'react-native-elements'\nimport { db } from '../firebase'\n\nconst CustomListItem = ({ id, chatName, enterChat }) => {\n    const [chatMessages, setChatMessages] = useState([])\n\n    useEffect(() => {\n        const unsubscribe =\n            db.collection(\"chats\").doc(id).collection(\"messages\").orderBy(\"timestamp\", \"desc\").\n                onSnapshot(snapshot => setChatMessages(snapshot.docs.map(doc => doc.data())))\n        return unsubscribe;\n    }, [])\n\n    return (\n        <ListItem onPress={() => enterChat(id, chatName)} key={id} bottomDivider>\n            <Avatar\n                rounded\n                source={{\n                    uri: chatMessages?.[0]?.photoURL ||\n                        \"https://img.icons8.com/ios-filled/100/000000/name.png\"\n                }} />\n            <ListItem.Content>\n                <ListItem.Title style={{ fontWeight: \"800\" }}>\n                    {chatName}\n                </ListItem.Title>\n                <ListItem.Subtitle style={{ fontStyle: \"italic\" }} numberOfLines={1}\n                    ellipsizeMode=\"tail\">{chatMessages?.[0]?.displayName} :\n                    {chatMessages?.[0]?.message}</ListItem.Subtitle>\n            </ListItem.Content>\n        </ListItem>\n    )\n}\n\n\nexport default CustomListItem\n\nconst styles = StyleSheet.create({})","import React from 'react'\nimport { useState } from 'react'\nimport { useLayoutEffect, useEffect } from 'react'\nimport { TouchableOpacity, ToastAndroid } from 'react-native'\nimport { SafeAreaView, ScrollView } from 'react-native'\nimport { StyleSheet, View } from 'react-native'\nimport { Avatar } from 'react-native-elements'\nimport CustomListItem from '../components/CustomListItem'\nimport { auth, db } from '../firebase'\nimport firebase from 'firebase/app';\nimport { AntDesign, SimpleLineIcons } from '@expo/vector-icons'\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { NavigationContainer } from '@react-navigation/native'\n\n\nconst HomeScreen = ({ navigation }) => {\n    const [chats, setChats] = useState([]);\n\n    const user = firebase.auth().currentUser;\n\n    const toast = 'Welcome Back!'\n\n    const image = { uri: 'https://99designs-blog.imgix.net/blog/wp-content/uploads/2018/12/Gradient_builder_2.jpg' };\n\n\n    ToastAndroid.showWithGravity(\n        toast,\n        ToastAndroid.SHORT,\n        ToastAndroid.CENTER\n    );\n\n    useEffect(() => {\n        const unsubscribe = db.collection('chats').onSnapshot((snapshot) =>\n            setChats(\n                snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    data: doc.data()\n                }))\n            ))\n        return unsubscribe;\n    }, [])\n\n    const About = () => {\n        navigation.replace(\"About\")\n    }\n\n    const profile = () => {\n        navigation.replace(\"profile\")\n    }\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerTitle: \"ChatOn\",\n            headerStyle: { backgroundColor: \"#5142f5\" },\n            headerTitleStyle: { color: \"white\", alignSelf: \"center\" },\n            headerTintColor: \"white\",\n            headerLeft: () => (\n                <View style={{ marginLeft: 20 }}>\n                    <TouchableOpacity onPress={profile} activeOpacity={0.5}>\n                        <Avatar rounded\n                            source={{\n                                uri: user.photoURL,\n                            }}\n                        />\n                    </TouchableOpacity>\n                </View>\n            ),\n            headerRight: () => (\n                <View style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    width: 80,\n                    marginRight: 20\n                }} >\n                    <TouchableOpacity activeOpacity={0.5}>\n                        <AntDesign name=\"camerao\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={() => navigation.navigate(\"AddChat\")}>\n                        <SimpleLineIcons name=\"pencil\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                </View>\n            )\n        })\n    }, [])\n\n    const enterChat = (id, chatName) => {\n        navigation.navigate(\"Chat\", {\n            id,\n            chatName\n        })\n    }\n\n\n    return (\n        <SafeAreaView>\n            <LinearGradient\n                colors={['#833ab4', '#fd1d1d', '#fcb045']}\n                style={styles.button}>\n                <ScrollView style={{ height: '100%' }}>\n                    {chats.map(({ id, data: { chatName } }) =>\n                        <CustomListItem key={id} id={id} chatName={chatName}\n                            enterChat={enterChat} />)}\n                </ScrollView>\n            </LinearGradient>\n        </SafeAreaView>\n    )\n}\n\nexport default HomeScreen\n\nconst styles = StyleSheet.create({\n})\n","import React, { useState } from 'react'\nimport { useLayoutEffect } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Button, Input } from 'react-native-elements'\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { db } from '../firebase';\n\nconst AddChat = ({ navigation }) => {\n    const [input, setInput] = useState(\"\")\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Add a new Chat\",\n            headerBackTitle: \"Chats\",\n        })\n    }, [navigation])\n\n    const createChat = async () => {\n        await db\n            .collection(\"chats\")\n            .add({\n                chatName: input\n            })\n            .then(() => navigation.goBack())\n            .catch((error) => alert(error))\n    }\n\n    return (\n        <View style={styles.container}>\n            <Input\n                placeholder=\"Enter a chat name\"\n                value={input} onChangeText={(text) => setInput(text)}\n                onSubmitEditing={createChat}\n                leftIcon={\n                    <Icon name=\"wechat\" size={24} color=\"black\" />\n                }\n            />\n            <Button onPress={createChat} title=\"Create new Chat\" />\n        </View>\n    )\n}\n\nexport default AddChat\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"white\",\n        padding: 30,\n        height: \"100%\"\n    }\n})\n","import { AntDesign, FontAwesome, Ionicons } from '@expo/vector-icons'\nimport React, { useLayoutEffect, useState } from 'react'\nimport {\n    TouchableOpacity, SafeAreaView, StatusBar,\n    KeyboardAvoidingView, ScrollView, TextInput, Platform,\n    Keyboard, TouchableWithoutFeedback, ImageBackground, Linking\n} from 'react-native'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Avatar } from 'react-native-elements/dist/avatar/Avatar'\nimport firebase from 'firebase/app'\nimport { auth, db } from '../firebase'\n\n\nconst chatScreen = ({ navigation, route }) => {\n    const [input, setInput] = useState(\"\")\n    const [messages, setMessages] = useState([])\n\n    useLayoutEffect(() => {\n\n    }, [navigation])\n\n    useLayoutEffect(() => {\n        const unsubscribe =\n            db.collection(\"chats\").doc(route.params.id).collection(\"messages\").orderBy\n                (\"timestamp\", \"asc\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    data: doc.data()\n                }))))\n        return unsubscribe\n    }, [route])\n\n    const sendMessage = () => {\n        Keyboard.dismiss()\n        db.collection('chats').doc(route.params.id).collection('messages').add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            message: input,\n            displayName: auth.currentUser.displayName,\n            email: auth.currentUser.email,\n            photoURL: auth.currentUser.photoURL\n        })\n        setInput('')\n    }\n    const call = () => {\n        Linking.openURL(`tel:${+91}`)\n    }\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Chat\",\n            headerBackTitleVisible: false,\n            headerTitleAlign: \"left\",\n            headerTitle: () => (\n                <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Avatar rounded\n                        source={{ uri: messages[messages.length - 1]?.data.photoURL || \"https://img.icons8.com/color/720/000000/signal-app.png\" }} />\n                    <Text style={{ color: \"white\", marginLeft: 10, fontWeight: \"700\" }}>\n                        {route.params.chatName}\n                    </Text>\n                </View>\n            ),\n            headerLeft: () => (\n                <TouchableOpacity style={{ marginLeft: 10 }} onPress={navigation.goBack}>\n                    <AntDesign name=\"arrowleft\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            ),\n            headerRight: () => (\n                <View style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    width: 80,\n                    marginRight: 20\n                }}>\n                    <TouchableOpacity>\n                        <FontAwesome name=\"video-camera\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                    <TouchableOpacity>\n                        <Ionicons name=\"call\" size={24} color=\"white\" onPress={call} />\n                    </TouchableOpacity>\n                </View>\n            )\n        })\n    })\n\n    const image = { uri: 'https://99designs-blog.imgix.net/blog/wp-content/uploads/2018/12/Gradient_builder_2.jpg' };\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n            <ImageBackground source={image} style={styles.image}>\n                <StatusBar style=\"light\" />\n                <KeyboardAvoidingView behavior={Platform.OS == \"android\" ? 'padding' : \"height\"}\n                    style={styles.container} keyboardVerticalOffset={90}>\n                    <TouchableWithoutFeedback onPress={Keyboard.dismiss} >\n                        <>\n                            <ScrollView contentContainerStyle={{ paddingTop: 15 }}>\n                                {messages.map(({ id, data }) =>\n                                    data.email === auth.currentUser.email ? (\n                                        <View key={id} style={styles.receiver}>\n                                            <Avatar position=\"absolute\" bottom={-15}\n                                                right={-5} rounded size={30} containerStyle={{\n                                                    position: \"absolute\", bottom: -15, rigth: -5\n                                                }}\n                                                source={{ uri: data.photoURL }}\n                                            />\n                                            <Text style={styles.receiverText}>{data.message}</Text>\n                                        </View>\n                                    ) : (\n                                        <View key={id} style={styles.sender}>\n                                            <Avatar position=\"absolute\" bottom={-15} right={-5}\n                                                rounded size={30} containerStyle={{\n                                                    position: \"absolute\",\n                                                    bottom: -15, right: -5\n                                                }}\n                                                source={{ uri: data.photoURL }}\n                                            />\n\n                                            <Text style={styles.senderText}>{data.message}</Text>\n                                            <Text style={styles.senderName}>{data.displayName}</Text>\n\n                                        </View>\n                                    )\n                                )}\n                            </ScrollView>\n                            <View style={styles.footer}>\n                                <TextInput value={input} onChangeText={(text) => setInput(text)}\n                                    placeholder=\"Type a Message\" style={styles.textInput}\n                                    onSubmitEditing={sendMessage} />\n                                <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\n                                    <Ionicons name=\"send\" size={24} color=\"#2B58E6\" />\n                                </TouchableOpacity>\n                            </View>\n                        </>\n                    </TouchableWithoutFeedback>\n                </KeyboardAvoidingView>\n            </ImageBackground>\n        </SafeAreaView>\n    )\n}\n\nexport default chatScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n    footer: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        width: \"100%\",\n        padding: 15\n    },\n    textInput: {\n        bottom: 0,\n        height: 40,\n        flex: 1,\n        marginRight: 15,\n        backgroundColor: \"#ECECEC\",\n        padding: 10,\n        color: \"grey\",\n        borderRadius: 30\n    },\n    receiver: {\n        padding: 15,\n        backgroundColor: \"#ECECEC\",\n        alignSelf: \"flex-end\",\n        borderRadius: 20,\n        marginRight: 15,\n        marginBottom: 20,\n        maxWidth: \"80%\",\n        position: \"relative\"\n    },\n    sender: {\n        padding: 15,\n        backgroundColor: \"#2B66E6\",\n        alignSelf: \"flex-start\",\n        borderRadius: 20,\n        marginRight: 15,\n        marginBottom: 20,\n        maxWidth: \"80%\",\n        position: \"relative\"\n    },\n    senderText: {\n        color: \"white\",\n        fontWeight: \"500\",\n        marginLeft: 10,\n        marginBottom: 15\n    },\n    receiverText: {\n        color: \"black\",\n        fontWeight: \"500\",\n        marginLeft: 10\n    },\n    senderName: {\n        left: 10,\n        paddingRight: 10,\n        fontSize: 10,\n        color: \"white\"\n    },\n    image: {\n        flex: 1,\n        resizeMode: 'cover',\n        justifyContent: 'center',\n    }\n})\n","import React, { useState, useLayoutEffect } from 'react'\nimport { StyleSheet, Text, View, Image, ToastAndroid } from 'react-native'\nimport { auth, db } from '../firebase'\nimport firebase from 'firebase/app';\nimport { SafeAreaView, ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements'\n\n\nconst profileScreen = ({ navigation }) => {\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Profile\",\n            headerTitleStyle: { alignSelf: \"center\" }\n        })\n    }, [navigation])\n\n    const user = firebase.auth().currentUser;\n\n    const signOutUser = () => {\n        auth.signOut().then(() => {\n            navigation.replace('Login')\n        });\n        ToastAndroid.showWithGravityAndOffset(\n            'Logging out',\n            ToastAndroid.LONG,\n            ToastAndroid.BOTTOM,\n            25,\n            50)\n    }\n\n    const home = () => {\n        navigation.replace('Home')\n    }\n\n    return (\n        <SafeAreaView style={styles.container}>\n\n            <Image\n                source={{\n                    uri: user.photoURL,\n                }}\n                style={styles.stretch}\n            />\n            <View style={styles.container}>\n                <ScrollView>\n                    <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 200 }}>\n                        <View style={{ flex: 1, height: 1, backgroundColor: 'black' }} />\n                        <View>\n                            <Text style={{ width: 80, textAlign: 'center' }}>User Name</Text>\n                        </View>\n                        <View style={{ flex: 1, height: 1, backgroundColor: 'black' }} />\n                    </View>\n                    <View style={{ paddingTop: 20, flexDirection: 'column' }}>\n                        <Text style={{ fontSize: 30 }}>{user.displayName}</Text>\n                    </View>\n                    <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 10 }}>\n                        <View style={{ flex: 1, height: 1, backgroundColor: 'black' }} />\n                        <View>\n                            <Text style={{ width: 80, textAlign: 'center' }}>User Email</Text>\n                        </View>\n                        <View style={{ flex: 1, height: 1, backgroundColor: 'black' }} />\n                    </View>\n                    <View style={{ paddingTop: 20, flexDirection: 'column' }}>\n                        <Text style={{ fontSize: 30 }}>{user.email}</Text>\n                    </View>\n                    <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 40 }}>\n                        <View style={{ flex: 1, height: 1, backgroundColor: 'black' }} />\n                        <View style={{ flex: 1, height: 1, backgroundColor: 'black' }} />\n                    </View>\n                    <Button style={{ paddingTop: 80 }} type=\"outline\" title=\"Sign out\"\n                        onPress={signOutUser} />\n                    <Button style={{ paddingTop: 30 }} type=\"outline\" title=\"Back\"\n                        onPress={home} />\n                </ScrollView>\n            </View>\n        </SafeAreaView >\n    )\n}\n\nexport default profileScreen\n\nconst styles = StyleSheet.create({\n    stretch: {\n        width: 400,\n        height: 200,\n        position: 'absolute',\n        borderColor: '#000000',\n    },\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        padding: 10,\n    },\n\n})\n","import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\n\nconst About = () => {\n    return (\n        <View>\n            <Text>About</Text>\n        </View>\n    )\n}\n\nexport default About\n\nconst styles = StyleSheet.create({})\n","import { StatusBar } from 'expo-status-bar';\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport loginscreen from './screens/loginscreen';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport register from './screens/registerscreen';\nimport registerscreen from './screens/registerscreen';\nimport HomeScreen from './screens/HomeScreen';\nimport AddChat from './screens/AddChat';\nimport chatScreen from './screens/chatScreen';\nimport profileScreen from './screens/profileScreen';\nimport About from './screens/About'\n\nconst Stack = createStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#2C68ED\" },\n  headerTitleStyle: { color: \"white\" },\n  headerTintColor: \"white\",\n}\n\n\nexport default function App() {\n  return (\n    <NavigationContainer style={styles.container}>\n      <Stack.Navigator\n        screenOptions={globalScreenOptions}>\n        <Stack.Screen name='Login' component={loginscreen} />\n        <Stack.Screen name='Register' component={registerscreen} />\n        <Stack.Screen name='Home' component={HomeScreen} />\n        <Stack.Screen name=\"AddChat\" component={AddChat} />\n        <Stack.Screen name=\"Chat\" component={chatScreen} />\n        <Stack.Screen name=\"profile\" component={profileScreen} />\n        <Stack.Screen name='About' component={About} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { Platform, InteractionManager } from 'react-native';\nconst _setTimeout = global.setTimeout;\nconst _clearTimeout = global.clearTimeout;\nconst MAX_TIMER_DURATION_MS = 60 * 1000;\nif (Platform.OS === 'android') {\n  const timerFix = {};\n  const runTask = (id, fn, ttl, args) => {\n    const waitingTime = ttl - Date.now();\n    if (waitingTime <= 1) {\n      InteractionManager.runAfterInteractions(() => {\n        if (!timerFix[id]) {\n          return;\n        }\n        delete timerFix[id];\n        fn(...args);\n      });\n      return;\n    }\n    const afterTime = Math.min(waitingTime, MAX_TIMER_DURATION_MS);\n    timerFix[id] = _setTimeout(() => runTask(id, fn, ttl, args), afterTime);\n  };\n  global.setTimeout = (fn, time, ...args) => {\n    if (MAX_TIMER_DURATION_MS < time) {\n      const ttl = Date.now() + time;\n      const id = '_lt_' + Object.keys(timerFix).length;\n      runTask(id, fn, ttl, args);\n      return id;\n    }\n    return _setTimeout(fn, time, ...args);\n  };\n  global.clearTimeout = id => {\n    if (typeof id === 'string' && id.startsWith('_lt_')) {\n      _clearTimeout(timerFix[id]);\n      delete timerFix[id];\n      return;\n    }\n    _clearTimeout(id);\n  };\n}\n"],"sourceRoot":""}